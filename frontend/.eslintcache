[{"/Users/satvikmadaan/Desktop/Agrobuy/frontend/src/index.js":"1","/Users/satvikmadaan/Desktop/Agrobuy/frontend/src/App.js":"2","/Users/satvikmadaan/Desktop/Agrobuy/frontend/src/store.js":"3","/Users/satvikmadaan/Desktop/Agrobuy/frontend/src/reportWebVitals.js":"4","/Users/satvikmadaan/Desktop/Agrobuy/frontend/src/reducers/userReducers.js":"5","/Users/satvikmadaan/Desktop/Agrobuy/frontend/src/reducers/productReducer.js":"6","/Users/satvikmadaan/Desktop/Agrobuy/frontend/src/reducers/orderReducer.js":"7","/Users/satvikmadaan/Desktop/Agrobuy/frontend/src/reducers/cartReducer.js":"8","/Users/satvikmadaan/Desktop/Agrobuy/frontend/src/components/Header.jsx":"9","/Users/satvikmadaan/Desktop/Agrobuy/frontend/src/components/footer.jsx":"10","/Users/satvikmadaan/Desktop/Agrobuy/frontend/src/screens/LoginScreen.jsx":"11","/Users/satvikmadaan/Desktop/Agrobuy/frontend/src/screens/HomeScreen.jsx":"12","/Users/satvikmadaan/Desktop/Agrobuy/frontend/src/screens/ProfileScreen.jsx":"13","/Users/satvikmadaan/Desktop/Agrobuy/frontend/src/screens/ShippingScreen.jsx":"14","/Users/satvikmadaan/Desktop/Agrobuy/frontend/src/screens/PlaceOrderScreen.jsx":"15","/Users/satvikmadaan/Desktop/Agrobuy/frontend/src/screens/BreederScreen.jsx":"16","/Users/satvikmadaan/Desktop/Agrobuy/frontend/src/screens/OrderScreen.jsx":"17","/Users/satvikmadaan/Desktop/Agrobuy/frontend/src/screens/AdminScreen.jsx":"18","/Users/satvikmadaan/Desktop/Agrobuy/frontend/src/screens/TransporterScreen.jsx":"19","/Users/satvikmadaan/Desktop/Agrobuy/frontend/src/screens/PaymentScreen.jsx":"20","/Users/satvikmadaan/Desktop/Agrobuy/frontend/src/screens/FCIScreen.jsx":"21","/Users/satvikmadaan/Desktop/Agrobuy/frontend/src/screens/ProductDetails.jsx":"22","/Users/satvikmadaan/Desktop/Agrobuy/frontend/src/screens/RegisterScreen.jsx":"23","/Users/satvikmadaan/Desktop/Agrobuy/frontend/src/screens/CartScreen.jsx":"24","/Users/satvikmadaan/Desktop/Agrobuy/frontend/src/constants/userContants.js":"25","/Users/satvikmadaan/Desktop/Agrobuy/frontend/src/constants/orderConstant.js":"26","/Users/satvikmadaan/Desktop/Agrobuy/frontend/src/constants/cartConstant.js":"27","/Users/satvikmadaan/Desktop/Agrobuy/frontend/src/constants/productConstant.js":"28","/Users/satvikmadaan/Desktop/Agrobuy/frontend/src/actions/productActions.js":"29","/Users/satvikmadaan/Desktop/Agrobuy/frontend/src/actions/orderAction.js":"30","/Users/satvikmadaan/Desktop/Agrobuy/frontend/src/actions/userAction.js":"31","/Users/satvikmadaan/Desktop/Agrobuy/frontend/src/actions/cartAction.js":"32","/Users/satvikmadaan/Desktop/Agrobuy/frontend/src/screens/ProductScreen.jsx":"33","/Users/satvikmadaan/Desktop/Agrobuy/frontend/src/components/Rating.jsx":"34","/Users/satvikmadaan/Desktop/Agrobuy/frontend/src/components/shared/Message.jsx":"35","/Users/satvikmadaan/Desktop/Agrobuy/frontend/src/components/shared/FromContainer.jsx":"36","/Users/satvikmadaan/Desktop/Agrobuy/frontend/src/components/shared/CheckoutStep.jsx":"37","/Users/satvikmadaan/Desktop/Agrobuy/frontend/src/components/shared/Loader.jsx":"38","/Users/satvikmadaan/Desktop/Agrobuy/frontend/src/components/Breeder/RegistrationForm.jsx":"39","/Users/satvikmadaan/Desktop/Agrobuy/frontend/src/components/Breeder/BreederForm.jsx":"40","/Users/satvikmadaan/Desktop/Agrobuy/frontend/src/components/Breeder/PastSeeds.jsx":"41","/Users/satvikmadaan/Desktop/Agrobuy/frontend/src/components/FCI/OpenBids.jsx":"42","/Users/satvikmadaan/Desktop/Agrobuy/frontend/src/components/FCI/Seeds.jsx":"43","/Users/satvikmadaan/Desktop/Agrobuy/frontend/src/components/FCI/Transport.jsx":"44","/Users/satvikmadaan/Desktop/Agrobuy/frontend/src/components/FCI/CreateBid.jsx":"45","/Users/satvikmadaan/Desktop/Agrobuy/frontend/src/components/FCI/AllBids.jsx":"46","/Users/satvikmadaan/Desktop/Agrobuy/frontend/src/components/FCI/Breeder.jsx":"47","/Users/satvikmadaan/Desktop/Agrobuy/frontend/src/components/FCI/SeedsList.jsx":"48","/Users/satvikmadaan/Desktop/Agrobuy/frontend/src/components/FCI/BreederList.jsx":"49","/Users/satvikmadaan/Desktop/Agrobuy/frontend/src/components/FCI/TransportList.jsx":"50","/Users/satvikmadaan/Desktop/Agrobuy/frontend/src/components/Admin/ProductList.jsx":"51","/Users/satvikmadaan/Desktop/Agrobuy/frontend/src/components/Transporter/RegistrationForm.jsx":"52","/Users/satvikmadaan/Desktop/Agrobuy/frontend/src/components/Transporter/MyBids.jsx":"53","/Users/satvikmadaan/Desktop/Agrobuy/frontend/src/components/Transporter/OpenBids.jsx":"54","/Users/satvikmadaan/Desktop/Agrobuy/frontend/src/components/Admin/OrderList.jsx":"55","/Users/satvikmadaan/Desktop/Agrobuy/frontend/src/components/Admin/EditProduct.jsx":"56","/Users/satvikmadaan/Desktop/Agrobuy/frontend/src/components/Admin/UserList.jsx":"57","/Users/satvikmadaan/Desktop/Agrobuy/frontend/src/components/Admin/AddNewProduct.jsx":"58","/Users/satvikmadaan/Desktop/Agrobuy/frontend/src/components/shared/Success.jsx":"59","/Users/satvikmadaan/Desktop/Agrobuy/frontend/src/screens/FirstScreen.jsx":"60"},{"size":597,"mtime":1668687445943,"results":"61","hashOfConfig":"62"},{"size":2125,"mtime":1669458314508,"results":"63","hashOfConfig":"62"},{"size":2825,"mtime":1668687445955,"results":"64","hashOfConfig":"62"},{"size":362,"mtime":1668687445947,"results":"65","hashOfConfig":"62"},{"size":5564,"mtime":1668687445946,"results":"66","hashOfConfig":"62"},{"size":5812,"mtime":1668687445945,"results":"67","hashOfConfig":"62"},{"size":3037,"mtime":1668687445945,"results":"68","hashOfConfig":"62"},{"size":1084,"mtime":1668687445945,"results":"69","hashOfConfig":"62"},{"size":1892,"mtime":1669454246486,"results":"70","hashOfConfig":"62"},{"size":2243,"mtime":1669542349968,"results":"71","hashOfConfig":"62"},{"size":2304,"mtime":1669534596339,"results":"72","hashOfConfig":"62"},{"size":1003,"mtime":1669446618381,"results":"73","hashOfConfig":"62"},{"size":5726,"mtime":1668687445952,"results":"74","hashOfConfig":"62"},{"size":1814,"mtime":1668687445953,"results":"75","hashOfConfig":"62"},{"size":4393,"mtime":1668687445951,"results":"76","hashOfConfig":"62"},{"size":1910,"mtime":1669456331818,"results":"77","hashOfConfig":"62"},{"size":5716,"mtime":1669540008885,"results":"78","hashOfConfig":"62"},{"size":2396,"mtime":1669456374681,"results":"79","hashOfConfig":"62"},{"size":2121,"mtime":1669456486606,"results":"80","hashOfConfig":"62"},{"size":1376,"mtime":1668687445951,"results":"81","hashOfConfig":"62"},{"size":4692,"mtime":1669456439972,"results":"82","hashOfConfig":"62"},{"size":2843,"mtime":1669541236196,"results":"83","hashOfConfig":"62"},{"size":3294,"mtime":1669534548180,"results":"84","hashOfConfig":"62"},{"size":3709,"mtime":1669460891139,"results":"85","hashOfConfig":"62"},{"size":903,"mtime":1668687445943,"results":"86","hashOfConfig":"62"},{"size":801,"mtime":1668687445942,"results":"87","hashOfConfig":"62"},{"size":238,"mtime":1668687445941,"results":"88","hashOfConfig":"62"},{"size":371,"mtime":1668687445942,"results":"89","hashOfConfig":"62"},{"size":6710,"mtime":1669460857704,"results":"90","hashOfConfig":"62"},{"size":3652,"mtime":1668687445923,"results":"91","hashOfConfig":"62"},{"size":8984,"mtime":1669460872755,"results":"92","hashOfConfig":"62"},{"size":1203,"mtime":1668687445922,"results":"93","hashOfConfig":"62"},{"size":889,"mtime":1669461627597,"results":"94","hashOfConfig":"62"},{"size":1513,"mtime":1668687445936,"results":"95","hashOfConfig":"62"},{"size":196,"mtime":1668687445940,"results":"96","hashOfConfig":"62"},{"size":336,"mtime":1668687445939,"results":"97","hashOfConfig":"62"},{"size":1333,"mtime":1668687445939,"results":"98","hashOfConfig":"62"},{"size":389,"mtime":1668687445940,"results":"99","hashOfConfig":"62"},{"size":4217,"mtime":1668687445931,"results":"100","hashOfConfig":"62"},{"size":3433,"mtime":1669460879598,"results":"101","hashOfConfig":"62"},{"size":1307,"mtime":1668687445930,"results":"102","hashOfConfig":"62"},{"size":2268,"mtime":1668687445933,"results":"103","hashOfConfig":"62"},{"size":1656,"mtime":1668687445934,"results":"104","hashOfConfig":"62"},{"size":1817,"mtime":1668687445935,"results":"105","hashOfConfig":"62"},{"size":7273,"mtime":1668687445933,"results":"106","hashOfConfig":"62"},{"size":1680,"mtime":1668687445932,"results":"107","hashOfConfig":"62"},{"size":1798,"mtime":1668687445932,"results":"108","hashOfConfig":"62"},{"size":2410,"mtime":1669460882673,"results":"109","hashOfConfig":"62"},{"size":2366,"mtime":1668687445933,"results":"110","hashOfConfig":"62"},{"size":2384,"mtime":1668687445935,"results":"111","hashOfConfig":"62"},{"size":2301,"mtime":1668687445929,"results":"112","hashOfConfig":"62"},{"size":4246,"mtime":1669460888504,"results":"113","hashOfConfig":"62"},{"size":111,"mtime":1668687445936,"results":"114","hashOfConfig":"62"},{"size":3603,"mtime":1669460885577,"results":"115","hashOfConfig":"62"},{"size":120,"mtime":1668687445928,"results":"116","hashOfConfig":"62"},{"size":4773,"mtime":1669460875913,"results":"117","hashOfConfig":"62"},{"size":1784,"mtime":1668687445929,"results":"118","hashOfConfig":"62"},{"size":3729,"mtime":1669456922669,"results":"119","hashOfConfig":"62"},{"size":183,"mtime":1668687445940,"results":"120","hashOfConfig":"62"},{"size":672,"mtime":1669458797166,"results":"121","hashOfConfig":"62"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},"1esu1w4",{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"151","messages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"155","messages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"124"},{"filePath":"158","messages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"160","messages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"162","messages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"164","messages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"166","messages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"168","messages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"170","messages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"172","messages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"174","messages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"176","messages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"178","messages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"180","messages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"124"},{"filePath":"183","messages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"185","messages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"187","messages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"189","messages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"124"},{"filePath":"192","messages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"194","messages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"196","messages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"198","messages":"199","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"200","messages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"202","messages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"204","messages":"205","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"124"},{"filePath":"207","messages":"208","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"209","messages":"210","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"211","messages":"212","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"124"},{"filePath":"214","messages":"215","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"216","messages":"217","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"124"},{"filePath":"219","messages":"220","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"221","messages":"222","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"223","messages":"224","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"225","messages":"226","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"227","messages":"228","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"229","messages":"230","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"231","messages":"232","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"233","messages":"234","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"235","messages":"236","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237","usedDeprecatedRules":"124"},{"filePath":"238","messages":"239","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"240","messages":"241","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"242","messages":"243","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"244","messages":"245","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"246","usedDeprecatedRules":"124"},{"filePath":"247","messages":"248","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"249","messages":"250","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},"/Users/satvikmadaan/Desktop/Agrobuy/frontend/src/index.js",[],["251","252"],"/Users/satvikmadaan/Desktop/Agrobuy/frontend/src/App.js",[],"/Users/satvikmadaan/Desktop/Agrobuy/frontend/src/store.js",[],"/Users/satvikmadaan/Desktop/Agrobuy/frontend/src/reportWebVitals.js",[],"/Users/satvikmadaan/Desktop/Agrobuy/frontend/src/reducers/userReducers.js",[],"/Users/satvikmadaan/Desktop/Agrobuy/frontend/src/reducers/productReducer.js",[],"/Users/satvikmadaan/Desktop/Agrobuy/frontend/src/reducers/orderReducer.js",[],"/Users/satvikmadaan/Desktop/Agrobuy/frontend/src/reducers/cartReducer.js",[],"/Users/satvikmadaan/Desktop/Agrobuy/frontend/src/components/Header.jsx",[],"/Users/satvikmadaan/Desktop/Agrobuy/frontend/src/components/footer.jsx",[],"/Users/satvikmadaan/Desktop/Agrobuy/frontend/src/screens/LoginScreen.jsx",[],"/Users/satvikmadaan/Desktop/Agrobuy/frontend/src/screens/HomeScreen.jsx",[],"/Users/satvikmadaan/Desktop/Agrobuy/frontend/src/screens/ProfileScreen.jsx",[],"/Users/satvikmadaan/Desktop/Agrobuy/frontend/src/screens/ShippingScreen.jsx",[],"/Users/satvikmadaan/Desktop/Agrobuy/frontend/src/screens/PlaceOrderScreen.jsx",[],"/Users/satvikmadaan/Desktop/Agrobuy/frontend/src/screens/BreederScreen.jsx",[],"/Users/satvikmadaan/Desktop/Agrobuy/frontend/src/screens/OrderScreen.jsx",["253"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { ORDER_PAY_RESET } from \"../constants/orderConstant\";\nimport { Row, Col, ListGroup, Image, Card } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { getOrderDetails, payOrder } from \"../actions/orderAction\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../components/shared/Message\";\nimport Loader from \"../components/shared/Loader\";\nimport \"../App.css\";\nimport MetaMaskLoginButton from \"react-metamask-login-button\";\n\nconst OrderScreen = ({ match }) => {\n  const orderId = match.params.id;\n  const [sdkReady, setSdkReady] = useState(false);\n  const dispatch = useDispatch();\n\n  const orderDetails = useSelector((state) => state.orderDetails);\n  const { order, loading, error } = orderDetails;\n\n  const orderPay = useSelector((state) => state.orderPay);\n  const { loading: loadingPay, success: successpay } = orderPay;\n  if (!loading) {\n    //   Calculate prices\n    const addDecimals = (num) => {\n      return (Math.round(num * 100) / 100).toFixed(2);\n    };\n\n    order.itemsPrice = addDecimals(\n      order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0)\n    );\n  }\n\n  const successPaymentHandler = (paymentResult) => {\n    dispatch(payOrder(orderId, paymentResult));\n  };\n\n  // console.log(successPaymentHandler);\n\n  useEffect(() => {\n    const addPaypalScript = async () => {\n      const { data: clientId } = await axios.get(\"/api/config/paypal\");\n      const script = document.createElement(\"script\");\n      script.type = \"text/javascript\";\n      script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`;\n      script.async = true;\n      script.onload = () => {\n        setSdkReady(true);\n      };\n      document.body.appendChild(script);\n    };\n    if (!order || successpay) {\n      dispatch({ type: ORDER_PAY_RESET });\n      dispatch(getOrderDetails(orderId));\n    } else if (!order.isPaid) {\n      if (!window.paypal) {\n        addPaypalScript();\n      } else {\n        setSdkReady(true);\n      }\n    }\n  }, [dispatch, orderId, order, successpay]);\n\n  return loading ? (\n    <Loader />\n  ) : error ? (\n    <Message variant=\"danger\">{error}</Message>\n  ) : (\n    <>\n      <h3>Order ID: {order._id}</h3>\n\n      <Row>\n        <Col md={8}>\n          <ListGroup.Item variant=\"flush\">\n            <strong>\n              <h2>Pickup Details</h2>\n            </strong>\n            <p>\n              <strong>Name : </strong>\n              {order.user.name}\n            </p>\n            <p>\n              <strong>Email : </strong>\n              {order.user.email}\n            </p>\n            <p>\n              <strong>Address :</strong>\n              {order.shippingAddress.address}&nbsp;\n              {order.shippingAddress.city}&nbsp;\n              {order.shippingAddress.postalcode}&nbsp;\n              {order.shippingAddress.country}&nbsp;\n            </p>\n            {order.isDeliverd ? (\n              <Message variant=\"success\">Paid On {order.isDeliverd}</Message>\n            ) : (\n              <Message variant=\"danger\">Not Deliverd</Message>\n            )}\n          </ListGroup.Item>\n          <ListGroup.Item>\n            <h2>Payment Method</h2>\n            <p>\n              <strong>Method :</strong>&nbsp;\n              {order.paymentMethod}\n            </p>\n            {order.isPaid ? (\n              <Message variant=\"success\">Paid On {order.paidAt}</Message>\n            ) : (\n              <Message variant=\"danger\">Not Paid</Message>\n            )}\n          </ListGroup.Item>\n          <ListGroup.Item>\n            <h2>Order Items</h2>\n            {order.orderItems.length === 0 ? (\n              <Message>Your Cart is Empty</Message>\n            ) : (\n              <ListGroup variant=\"flush\">\n                {order.orderItems.map((item, index) => (\n                  <ListGroup.Item key={index}>\n                    <Row>\n                      <Col md={1}>\n                        <Image src={item.image} alt={item.name} fluid />\n                      </Col>\n                      <Col>\n                        <Link to={`/product/${item.product}`}>{item.name}</Link>\n                      </Col>\n                      <Col md={4}>\n                        {item.qty} X ₹{item.price} = ₹{item.price}\n                      </Col>\n                    </Row>\n                  </ListGroup.Item>\n                ))}\n              </ListGroup>\n            )}\n          </ListGroup.Item>\n        </Col>\n        <Col md={4}>\n          <Card>\n            <ListGroup variant=\"flush\">\n              <ListGroup.Item>\n                <h2>Order Summary</h2>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Items</Col>\n                  <Col>₹{order.itemsPrice}</Col>\n                </Row>\n                <Row>\n                  <Col>Tax</Col>\n                  <Col>₹{order.taxPrice}</Col>\n                </Row>\n                <Row>\n                  <Col>Total</Col>\n                  <Col>₹{order.totalPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                {error && <Message variant=\"danger\">{error}</Message>}\n              </ListGroup.Item>\n            </ListGroup>\n          </Card>\n          {!order.isPaid && (\n            <ListGroup.Item>\n              {loadingPay && <Loader />}\n              {!sdkReady ? (\n                <div className=\"div\">\n                  <MetaMaskLoginButton />\n                </div>\n              ) : (\n                <div></div>\n              )}\n            </ListGroup.Item>\n          )}\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nexport default OrderScreen;\n","/Users/satvikmadaan/Desktop/Agrobuy/frontend/src/screens/AdminScreen.jsx",[],"/Users/satvikmadaan/Desktop/Agrobuy/frontend/src/screens/TransporterScreen.jsx",[],"/Users/satvikmadaan/Desktop/Agrobuy/frontend/src/screens/PaymentScreen.jsx",[],"/Users/satvikmadaan/Desktop/Agrobuy/frontend/src/screens/FCIScreen.jsx",[],"/Users/satvikmadaan/Desktop/Agrobuy/frontend/src/screens/ProductDetails.jsx",[],"/Users/satvikmadaan/Desktop/Agrobuy/frontend/src/screens/RegisterScreen.jsx",[],"/Users/satvikmadaan/Desktop/Agrobuy/frontend/src/screens/CartScreen.jsx",[],"/Users/satvikmadaan/Desktop/Agrobuy/frontend/src/constants/userContants.js",[],"/Users/satvikmadaan/Desktop/Agrobuy/frontend/src/constants/orderConstant.js",[],"/Users/satvikmadaan/Desktop/Agrobuy/frontend/src/constants/cartConstant.js",[],"/Users/satvikmadaan/Desktop/Agrobuy/frontend/src/constants/productConstant.js",[],"/Users/satvikmadaan/Desktop/Agrobuy/frontend/src/actions/productActions.js",["254"],"import axios from \"axios\";\nimport {\n  PRODUCT_LIST_REQUEST,\n  PRODUCT_LIST_SUCCESS,\n  PRODUCT_LIST_FAILS,\n  PRODUCT_DETAILS_REQUEST,\n  PRODUCT_DETAILS_SUCCESS,\n  PRODUCT_DETAILS_FAILS,\n} from \"../constants/productConstant\";\nimport swal from \"sweetalert\";\n\nexport const listProducts = () => async (dispatch) => {\n  try {\n    dispatch({ type: PRODUCT_LIST_REQUEST });\n    const { data } = await axios.get(\"/api/products\");\n    dispatch({\n      type: PRODUCT_LIST_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_LIST_FAILS,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const listProductDetails = (id) => async (dispatch) => {\n  try {\n    dispatch({ type: PRODUCT_DETAILS_REQUEST });\n    const { data } = await axios.get(`/api/products/${id}`);\n    dispatch({ type: PRODUCT_DETAILS_SUCCESS, payload: data });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DETAILS_FAILS,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const deleteProduct = (id) => async (dispatch) => {\n  try {\n    const res = await axios.post(\"/api/products/deleteproduct\", { id });\n    swal(\"Product deleted Successfully\");\n    window.location.href = \"/admin/productlist\";\n    // console.log(res);\n  } catch (error) {\n    swal(\"Error while deleting product\");\n  }\n};\n\nexport const addProduct = (product) => async (dispatch) => {\n  dispatch({ type: \"ADD_PRODUCT_REQUEST\" });\n  try {\n    const response = await axios.post(\"/api/products/addproduct\", { product });\n    // console.log(response);\n    swal(\"Product added Successfully\");\n    dispatch({ type: \"ADD_PRODUCT_SUCCESS\", payload: response.data });\n    window.location.href = \"/admin/productlist\";\n  } catch (error) {\n    dispatch({ type: \"ADD_PRODUCT_FAILS\", payload: error });\n    swal(\"Error while adding product\");\n  }\n};\n\nexport const editProduct = (updatedProduct) => async (dispatch) => {\n  dispatch({ type: \"UPDATE_PRODUCT_REQUEST\" });\n  try {\n    const response = await axios.post(\"/api/products/updateproduct\", {\n      updatedProduct,\n    });\n    swal(\"Product edited Successfully\");\n    dispatch({ type: \"UPDATE_PRODUCT_SUCCESS\", payload: response.data });\n    window.location.href = \"/admin/productlist\";\n  } catch (error) {\n    dispatch({ type: \"UPDATE_PRODUCT_FAILS\", payload: error });\n    swal(\"Error while editing product\");\n  }\n};\n\nexport const getProductById = (id) => async (dispatch) => {\n  dispatch({ type: \"GET_PRODUCTBYID_REQUEST\" });\n  try {\n    const response = await axios.post(\"/api/products/getproductbyid\", { id });\n    // console.log(response);\n    dispatch({ type: \"GET_PRODUCTBYID_SUCCESS\", payload: response.data });\n  } catch (error) {\n    dispatch({ type: \"GET_PRODUCTBYID_FAILS\", payload: error });\n  }\n};\n\nexport const addSeeds = (product) => async (dispatch) => {\n  dispatch({ type: \"ADD_SEEDS_REQUEST\" });\n  try {\n    const response = await axios.post(\"/api/products/addseeds\", { product });\n    dispatch({ type: \"ADD_SEEDS_SUCCESS\", payload: response.data });\n    // window.location.href =\"/breeder\";\n  } catch (error) {\n    dispatch({ type: \"ADD_SEEDS_FAILS\", payload: error.stack });\n  }\n};\n\nexport const listMySeeds = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: \"SEEDS_LIST_MY_REQUEST\",\n    });\n    const {\n      userLogin: { userInfo },\n    } = getState();\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.get(\"/api/products/myseeds\", config);\n    // console.log(data);\n    dispatch({ type: \"SEEDS_LIST_MY_SUCCESS\", payload: data });\n  } catch (error) {\n    dispatch({\n      type: \"SEEDS_LIST_MY_FAIL\",\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const seedList = () => async (dispatch) => {\n  dispatch({ type: \"SEEDS_LIST_REQUEST\" });\n  try {\n    const res = await axios.get(\"/api/products/getallseeds\");\n    dispatch({ type: \"SEEDS_LIST_SUCCESS\", payload: res.data });\n  } catch (error) {\n    dispatch({ type: \"SEEDS_LIST_FAILS\", payload: error.stack });\n  }\n};\n\nexport const approveSeeds = (seedid) => async (dispatch) => {\n  try {\n    const res = await axios.post(\"/api/products/approveseed\", { seedid });\n    // console.log(res);\n    dispatch({ type: \"SEEDS_APPROVED\", payload: res.data });\n    window.location.href = \"/fci/seedslist\";\n  } catch (error) {\n    dispatch({ type: \"SEEDS_APPOVED_FAILS\", payload: error.stack });\n  }\n};\n\nexport const denySeeds = (seedid) => async (dispatch) => {\n  try {\n    const res = await axios.post(\"/api/products/denyseed\", { seedid });\n    dispatch({ type: \"SEED_DENIED\", payload: res.data });\n    window.location.href = \"/fci/seedlist\";\n  } catch (error) {\n    dispatch({ type: \"SEED_DENY_FAILS\", payload: error.stack });\n  }\n};\n\nexport const getApprovedSeeds = () => async (dispatch) => {\n  dispatch({ type: \"ALL_APPROVED_SEEDS_REQUEST\" });\n  try {\n    const response = await axios.get(\"/api/products/getapprovedseeds\");\n    // console.log(response.data);\n    dispatch({ type: \"ALL_APPROVED_SEEDS_SUCCESS\", payload: response.data });\n  } catch (error) {\n    dispatch({ type: \"ALL_APPROVED_SEEDS_FAILS\", payload: error.stack });\n  }\n};\n\nexport const createBid = (bid) => async (dispatch) => {\n  dispatch({ type: \"CREATE_BID_REQUEST\" });\n  try {\n    const response = await axios.post(\"/api/products/createbid\", { bid });\n    // console.log(response.data);\n    swal(\"Bid Created Successfully\");\n    dispatch({ type: \"CREATE_BID_SUCCESS\", payload: response.data });\n    window.location.href = \"/fci/openbids\";\n  } catch (error) {\n    dispatch({ type: \"CREATE_BID_FAILS\", payload: error.stack });\n  }\n};\n\nexport const openBidList = () => async (dispatch) => {\n  dispatch({ type: \"LIST_BID_REQUEST\" });\n  try {\n    const response = await axios.get(\"/api/products/allopen\");\n    // console.log(response.data);\n    dispatch({ type: \"LIST_BID_SUCCESS\", payload: response.data });\n  } catch (error) {\n    dispatch({ type: \"LIST_BID_FAILS\", payload: error.stack });\n  }\n};\nexport const closedBidList = () => async (dispatch) => {\n  dispatch({ type: \"LIST_CLOSEDBID_REQUEST\" });\n  try {\n    const response = await axios.get(\"/api/products/allclosed\");\n    // console.log(response.data);\n    dispatch({ type: \"LIST_CLOSEDBID_SUCCESS\", payload: response.data });\n  } catch (error) {\n    dispatch({ type: \"LIST_CLOSEDBID_FAILS\", payload: error.stack });\n  }\n};\n","/Users/satvikmadaan/Desktop/Agrobuy/frontend/src/actions/orderAction.js",[],"/Users/satvikmadaan/Desktop/Agrobuy/frontend/src/actions/userAction.js",[],"/Users/satvikmadaan/Desktop/Agrobuy/frontend/src/actions/cartAction.js",[],"/Users/satvikmadaan/Desktop/Agrobuy/frontend/src/screens/ProductScreen.jsx",["255"],"import React from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport Rating from \"../components/Rating\";\nimport { Link } from \"react-router-dom\";\nimport \"../App.css\";\nconst ProductScreen = ({ product }) => {\n  return (\n    <>\n      <Card className=\" p-3 rounded my-2\">\n        <Link to={`/product/${product._id}`}>\n          <img src={product.image} />\n        </Link>\n        <Card.Body>\n          <Link to={`/product/${product._id}`}>\n            <Card.Title as=\"div\">\n              <strong>{product.name}</strong>\n            </Card.Title>\n          </Link>\n          <Card.Text as=\"div\">\n            <Rating\n              value={product.rating}\n              text={`${product.numReviews} reviews`}\n            />\n          </Card.Text>\n          <Card.Text as=\"div\"> ₹{product.price}</Card.Text>\n        </Card.Body>\n      </Card>\n    </>\n  );\n};\n\nexport default ProductScreen;\n","/Users/satvikmadaan/Desktop/Agrobuy/frontend/src/components/Rating.jsx",[],"/Users/satvikmadaan/Desktop/Agrobuy/frontend/src/components/shared/Message.jsx",[],"/Users/satvikmadaan/Desktop/Agrobuy/frontend/src/components/shared/FromContainer.jsx",[],"/Users/satvikmadaan/Desktop/Agrobuy/frontend/src/components/shared/CheckoutStep.jsx",[],"/Users/satvikmadaan/Desktop/Agrobuy/frontend/src/components/shared/Loader.jsx",[],"/Users/satvikmadaan/Desktop/Agrobuy/frontend/src/components/Breeder/RegistrationForm.jsx",[],"/Users/satvikmadaan/Desktop/Agrobuy/frontend/src/components/Breeder/BreederForm.jsx",["256"],"import React, { useState, useEffect } from \"react\";\nimport { Form, Row, Col, Button } from \"react-bootstrap\";\nimport { addSeeds } from \"../../actions/productActions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Loader from \"../shared/Loader\";\nimport Message from \"../shared/Message\";\nimport { getBreederById } from \"../../actions/userAction\";\n\nconst BreederForm = () => {\n  const [name, setname] = useState(\"\");\n  const [quantity, setquantity] = useState(\"\");\n  const [place, setplace] = useState(\"\");\n  const [date, setdate] = useState(\"\");\n  const [category, setcategory] = useState(\"\");\n\n  const addProductState = useSelector((state) => state.addSeeds);\n  const { loading, error } = addProductState;\n\n  const dispatch = useDispatch();\n  const userState = useSelector((state) => state.userLogin);\n  const { userInfo } = userState;\n\n  const getBreederState = useSelector((state) => state.getBreederById);\n  // console.log(getBreederState.user);\n  // const {_id} = getBreederState.user;\n  const id = \"6341c2a642861b3e7536d9a3\";\n  // const id = _id;\n\n  useEffect(() => {\n    dispatch(getBreederById(userInfo._id));\n  }, [dispatch, userInfo._id]);\n\n  const submitForm = (e) => {\n    e.preventDefault();\n    const product = {\n      id,\n      name,\n      quantity,\n      place,\n      date,\n      category,\n    };\n    dispatch(addSeeds(product));\n  };\n  return (\n    <div>\n      {loading && <Loader />}\n      {error && <Message error=\"Add new product error\" />}\n      <Form onSubmit={submitForm} className=\"bg-light\">\n        <Row className=\"mb-2\">\n          <Form.Group as={Col} controlId=\"formGridEmail\">\n            <Form.Label>Seed Name</Form.Label>\n            <Form.Control\n              type=\"text\"\n              value={name}\n              onChange={(e) => setname(e.target.value)}\n              placeholder=\"Seed Name\"\n            />\n          </Form.Group>\n          <Form.Group as={Col} controlId=\"formGridZip\">\n            <Form.Label>Seeds Quantity</Form.Label>\n            <Form.Control\n              type=\"number\"\n              value={quantity}\n              onChange={(e) => setquantity(e.target.value)}\n              placeholder=\"Seeds Quantity\"\n            />\n          </Form.Group>\n        </Row>\n        <Row>\n          <Form.Group as={Col} controlId=\"formGridAddress2\">\n            <Form.Label>Place of growing</Form.Label>\n            <Form.Control\n              type=\"text\"\n              value={place}\n              onChange={(e) => setplace(e.target.value)}\n              placeholder=\"Place of growing\"\n            />\n          </Form.Group>\n          <Form.Group as={Col} controlId=\"formGridAddress2\">\n            <Form.Label>Date of Harvesting</Form.Label>\n            <Form.Control\n              type=\"date\"\n              value={date}\n              onChange={(e) => setdate(e.target.value)}\n              placeholder=\"Date of harvesting\"\n            />\n          </Form.Group>\n        </Row>\n        <Row className=\"mb-3\">\n          <Form.Group as={Col}>\n            <Form.Label>Seed Category</Form.Label>\n            <Form.Control\n              type=\"text\"\n              value={category}\n              onChange={(e) => setcategory(e.target.value)}\n              placeholder=\"Seed Category\"\n            />\n          </Form.Group>\n        </Row>\n\n        <Button variant=\"primary\" type=\"submit\">\n          Submit\n        </Button>\n      </Form>\n    </div>\n  );\n};\n\nexport default BreederForm;\n","/Users/satvikmadaan/Desktop/Agrobuy/frontend/src/components/Breeder/PastSeeds.jsx",[],"/Users/satvikmadaan/Desktop/Agrobuy/frontend/src/components/FCI/OpenBids.jsx",[],"/Users/satvikmadaan/Desktop/Agrobuy/frontend/src/components/FCI/Seeds.jsx",["257"],"import React from \"react\";\nimport { useEffect } from \"react\";\nimport { Table } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Loader from \"../shared/Loader\";\nimport Message from \"../shared/Message\";\nimport { AiFillDelete } from \"react-icons/ai\";\nimport { getApprovedSeeds } from \"../../actions/productActions\";\n\nconst AllSeeds = () => {\n  const dispatch = useDispatch();\n  const userList = useSelector((state) => state.allSeed);\n  const { loading, error, seeds } = userList;\n  useEffect(() => {\n    dispatch(getApprovedSeeds());\n  }, [dispatch]);\n  return (\n    <>\n      <>\n        {loading ? (\n          <Loader />\n        ) : error ? (\n          <Message>Error while fetching breeders {error}</Message>\n        ) : (\n          <div>\n            <Table striped bordered hover>\n              <thead>\n                <tr>\n                  <th>Seed Name</th>\n                  <th>Quantity</th>\n                  <th>Place of Harvesting</th>\n                  <th>Date of Harvesting</th>\n                  <th>Date of Submission</th>\n                </tr>\n              </thead>\n              <tbody>\n                {seeds &&\n                  seeds.map((user) => (\n                    <tr>\n                      <td>{user.seedName}</td>\n                      <td>{user.quantity}</td>\n                      <td>{user.place}</td>\n                      <td>{user.date.slice(0,10)}</td>\n                      <td>{user.updatedAt.slice(0,10)}</td>\n                    </tr>\n                  ))}\n              </tbody>\n            </Table>\n          </div>\n        )}\n      </>\n    </>\n  );\n};\n\nexport default AllSeeds;\n","/Users/satvikmadaan/Desktop/Agrobuy/frontend/src/components/FCI/Transport.jsx",[],"/Users/satvikmadaan/Desktop/Agrobuy/frontend/src/components/FCI/CreateBid.jsx",["258","259"],"import React from \"react\";\nimport { useState } from \"react\";\nimport { Form, Row, Col, Button } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Loader from \"../shared/Loader\";\nimport Message from \"../shared/Message\";\nimport { createBid } from \"../../actions/productActions\";\n\nconst CreateBid = () => {\n  const [sourceAdd1, setsourceAdd1] = useState(\"\");\n  const [sourceAdd2, setsourceAdd2] = useState(\"\");\n  const [sourceCity, setsourceCity] = useState(\"\");\n  const [sourceState, setsourceState] = useState(\"\");\n  const [sourcePincode, setsourcePincode] = useState(\"\");\n  const [destAdd1, setdestAdd1] = useState(\"\");\n  const [destAdd2, setdestAdd2] = useState(\"\");\n  const [destCity, setdestCity] = useState(\"\");\n  const [destState, setdestState] = useState(\"\");\n  const [destPincode, setdestPincode] = useState(\"\");\n  const [shipName, setshipName] = useState(\"\");\n  const [shipQuantity, setshipQuantity] = useState(\"\");\n  const [shipCost, setshipCost] = useState(\"\");\n  const [endDate, setendDate] = useState(\"\");\n  const [bidders, setbidders] = useState(\"\");\n\n  const addProductState = useSelector((state) => state.createBid);\n  const { loading, error } = addProductState;\n\n  const submitForm = (e) => {\n    e.preventDefault();\n    const bid = {\n      sourceAdd1,\n      sourceAdd2,\n      sourceCity,\n      sourceState,\n      sourcePincode,\n      destAdd1,\n      destAdd2,\n      destCity,\n      destState,\n      destPincode,\n      shipName,\n      shipCost,\n      shipQuantity,\n      endDate,\n      bidders,\n    };\n    dispatch(createBid(bid));\n  };\n  const dispatch = useDispatch();\n\n  return (\n    <>\n      <>\n        {/* {loading && <Loader />} */}\n        {error && <Message error=\"Create new bid error\" />}\n        <Form onSubmit={submitForm} className=\"bg-light\">\n          <h4>Source Address</h4>\n          <Row className=\"mb-2\">\n            <Form.Group as={Col}>\n              <Form.Label>Address Line 1</Form.Label>\n              <Form.Control\n                type=\"text\"\n                value={sourceAdd1}\n                onChange={(e) => setsourceAdd1(e.target.value)}\n                placeholder=\"Address Line 1\"\n              />\n            </Form.Group>\n            <Form.Group as={Col}>\n              <Form.Label>Address Line 2</Form.Label>\n              <Form.Control\n                type=\"text\"\n                value={sourceAdd2}\n                onChange={(e) => setsourceAdd2(e.target.value)}\n                placeholder=\"Address Line 2\"\n              />\n            </Form.Group>\n          </Row>\n          <Row className=\"mb-2\">\n            <Form.Group as={Col}>\n              <Form.Label>City</Form.Label>\n              <Form.Control\n                type=\"text\"\n                value={sourceCity}\n                onChange={(e) => setsourceCity(e.target.value)}\n                placeholder=\"City\"\n              />\n            </Form.Group>\n            <Form.Group as={Col}>\n              <Form.Label>State</Form.Label>\n              <Form.Control\n                type=\"text\"\n                value={sourceState}\n                onChange={(e) => setsourceState(e.target.value)}\n                placeholder=\"State\"\n              />\n            </Form.Group>\n            <Form.Group as={Col}>\n              <Form.Label>Pincode</Form.Label>\n              <Form.Control\n                type=\"number\"\n                value={sourcePincode}\n                onChange={(e) => setsourcePincode(e.target.value)}\n                placeholder=\"Pincode\"\n              />\n            </Form.Group>\n          </Row>\n          <h4>Destination Address</h4>\n          <Row className=\"mb-2\">\n            <Form.Group as={Col}>\n              <Form.Label>Address Line 1</Form.Label>\n              <Form.Control\n                type=\"text\"\n                value={destAdd1}\n                onChange={(e) => setdestAdd1(e.target.value)}\n                placeholder=\"Address Line 1\"\n              />\n            </Form.Group>\n            <Form.Group as={Col}>\n              <Form.Label>Address Line 2</Form.Label>\n              <Form.Control\n                type=\"text\"\n                value={destAdd2}\n                onChange={(e) => setdestAdd2(e.target.value)}\n                placeholder=\"Address Line 2\"\n              />\n            </Form.Group>\n          </Row>\n          <Row className=\"mb-2\">\n            <Form.Group as={Col}>\n              <Form.Label>City</Form.Label>\n              <Form.Control\n                type=\"text\"\n                value={destCity}\n                onChange={(e) => setdestCity(e.target.value)}\n                placeholder=\"City\"\n              />\n            </Form.Group>\n            <Form.Group as={Col}>\n              <Form.Label>State</Form.Label>\n              <Form.Control\n                type=\"text\"\n                value={destState}\n                onChange={(e) => setdestState(e.target.value)}\n                placeholder=\"State\"\n              />\n            </Form.Group>\n            <Form.Group as={Col}>\n              <Form.Label>Pincode</Form.Label>\n              <Form.Control\n                type=\"number\"\n                value={destPincode}\n                onChange={(e) => setdestPincode(e.target.value)}\n                placeholder=\"Pincode\"\n              />\n            </Form.Group>\n          </Row>\n          <h4>Shipment Details</h4>\n          <Row className=\"mb-2\">\n            <Form.Group as={Col}>\n              <Form.Label>Shipment Name</Form.Label>\n              <Form.Control\n                type=\"text\"\n                value={shipName}\n                onChange={(e) => setshipName(e.target.value)}\n                placeholder=\"Shipment Name\"\n              />\n            </Form.Group>\n            <Form.Group as={Col}>\n              <Form.Label>Quantity</Form.Label>\n              <Form.Control\n                type=\"number\"\n                value={shipQuantity}\n                onChange={(e) => setshipQuantity(e.target.value)}\n                placeholder=\"Quantity\"\n              />\n            </Form.Group>\n            <Form.Group as={Col}>\n              <Form.Label>Minimum Bid Amount</Form.Label>\n              <Form.Control\n                type=\"number\"\n                value={shipCost}\n                onChange={(e) => setshipCost(e.target.value)}\n                placeholder=\"Minimum Bid Amount\"\n              />\n            </Form.Group>\n          </Row>\n          <h4>Other Details</h4>\n          <Row>\n            <Form.Group as={Col}>\n              <Form.Label>Bid End Date</Form.Label>\n              <Form.Control\n                type=\"date\"\n                value={endDate}\n                onChange={(e) => setendDate(e.target.value)}\n                placeholder=\"Bid End Date\"\n              />\n            </Form.Group>\n            <Form.Group as={Col}>\n              <Form.Label>Maximum number of Bidders</Form.Label>\n              <Form.Control\n                type=\"number\"\n                value={bidders}\n                onChange={(e) => setbidders(e.target.value)}\n                placeholder=\"Maximum number of Bidders\"\n              />\n            </Form.Group>\n          </Row>\n          <br />\n          <Button variant=\"primary\" type=\"submit\">\n            Submit\n          </Button>\n        </Form>\n      </>\n    </>\n  );\n};\n\nexport default CreateBid;\n","/Users/satvikmadaan/Desktop/Agrobuy/frontend/src/components/FCI/AllBids.jsx",[],"/Users/satvikmadaan/Desktop/Agrobuy/frontend/src/components/FCI/Breeder.jsx",[],"/Users/satvikmadaan/Desktop/Agrobuy/frontend/src/components/FCI/SeedsList.jsx",[],"/Users/satvikmadaan/Desktop/Agrobuy/frontend/src/components/FCI/BreederList.jsx",[],"/Users/satvikmadaan/Desktop/Agrobuy/frontend/src/components/FCI/TransportList.jsx",[],"/Users/satvikmadaan/Desktop/Agrobuy/frontend/src/components/Admin/ProductList.jsx",[],"/Users/satvikmadaan/Desktop/Agrobuy/frontend/src/components/Transporter/RegistrationForm.jsx",[],"/Users/satvikmadaan/Desktop/Agrobuy/frontend/src/components/Transporter/MyBids.jsx",[],"/Users/satvikmadaan/Desktop/Agrobuy/frontend/src/components/Transporter/OpenBids.jsx",["260","261","262"],"import React, { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Loader from \"../shared/Loader\";\nimport Message from \"../shared/Message\";\nimport { Button, Col, Form, Modal, Table } from \"react-bootstrap\";\nimport { openBidList } from \"../../actions/productActions\";\nimport Popup from 'reactjs-popup';\nimport './popup.css';\nconst OpenBids = () => {\n  const dispatch = useDispatch();\n  const breederListState = useSelector((state) => state.openBidList);\n  const { loading, error, bids } = breederListState;\n  const id = \"6341c2a642861b3e7536d9a3\";\n  const [modalShow, setModalShow] = React.useState(false);\n  \n\n  const handleClose = () => setModalShow(false);\n  const handleShow = () => setModalShow(true);\n\n  const submitForm = (e, amount) => {\n    e.preventDefault();\n    const bid = {\n      id,\n      amount\n    }\n    // console.log(bid);\n  }\n\n  const SubmitandClose = (e, amount) => {\n    submitForm(e,amount);\n    handleClose();\n  }\n\n  function MyVerticallyCenteredModal(props) {\n    const [amount, setamount] = useState(\"\");\n    return (\n      <Modal\n        {...props}\n        size=\"lg\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n      >\n        <Modal.Header closeButton>\n          <Modal.Title id=\"contained-modal-title-vcenter\">\n            Enter Bid Amount\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form>\n          <Form.Group as={Col} controlId=\"formGridEmail\">\n            <Form.Label>Bid Amount</Form.Label>\n            <Form.Control\n              type=\"text\"\n              value={amount}\n              onChange={(e) => setamount(e.target.value)}\n              placeholder=\"Bid Amount\"\n            />\n            </Form.Group>\n          </Form>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button onClick={(e) => SubmitandClose(e,{amount})}>Submit</Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n\n\n  useEffect(() => {\n    dispatch(openBidList());\n  }, [dispatch]);\n\n  return (\n    <>\n      <>\n        {loading ? (\n          <Loader />\n        ) : error ? (\n          <Message>Error while fetching OpenBids {error}</Message>\n        ) : (\n          <div>\n            <Table striped bordered hover>\n              <thead>\n                <tr>\n                  <th>Source Address</th>\n                  <th>Destination Address</th>\n                  <th>Minimum Bid Amount</th>\n                  <th>Bidding End Date</th>\n                  <th>Bid Amount</th>\n                </tr>\n              </thead>\n              <tbody>\n                {bids &&\n                  bids.map((user) => (\n                    <tr>\n                      <td>\n                        {user.sourcecity}, {user.sourcestate}\n                      </td>\n                      <td>\n                        {user.destinationcity}, {user.destinationstate}\n                      </td>\n                      <td>{user.shipmentcost}</td>\n                      <td>{user.endTime.slice(0, 10)}</td>\n                      <td>\n                        <Button variant=\"primary\" onClick={() => setModalShow(true)}>\n                          Bid\n                        </Button>\n\n                        <MyVerticallyCenteredModal\n                          show={modalShow}\n                          onHide={() => setModalShow(false)}\n                        />\n                      </td>\n                    </tr>\n                  ))}\n              </tbody>\n            </Table>\n          </div>\n        )}\n      </>\n    </>\n  );\n};\n\nexport default OpenBids;\n","/Users/satvikmadaan/Desktop/Agrobuy/frontend/src/components/Admin/OrderList.jsx",[],"/Users/satvikmadaan/Desktop/Agrobuy/frontend/src/components/Admin/EditProduct.jsx",[],"/Users/satvikmadaan/Desktop/Agrobuy/frontend/src/components/Admin/UserList.jsx",[],"/Users/satvikmadaan/Desktop/Agrobuy/frontend/src/components/Admin/AddNewProduct.jsx",["263"],"import React, { useState } from \"react\";\nimport { Form, Row, Col, Button } from \"react-bootstrap\";\nimport { addProduct } from \"../../actions/productActions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Loader from \"../shared/Loader\";\nimport Message from \"../shared/Message\";\nimport Success from \"../shared/Success\";\n\nconst AddNewProduct = () => {\n  const [name, setname] = useState(\"\");\n  const [price, setprice] = useState();\n  const [image, setimage] = useState(\"\");\n  const [description, setdescription] = useState(\"\");\n  const [category, setcategory] = useState(\"\");\n  const [brand, setbrand] = useState(\"\");\n\n  const addProductState = useSelector((state) => state.addProduct);\n  const { loading, error, success } = addProductState;\n\n  const dispatch = useDispatch();\n\n  const submitForm = (e) => {\n    e.preventDefault();\n    const product = {\n      name,\n      image,\n      description,\n      category,\n      price,\n      brand,\n    };\n    dispatch(addProduct(product));\n  };\n  return (\n    <div>\n      {loading && <Loader />}\n      {error && <Message error=\"Add new product error\" />}\n      {success && <Success error=\"Product added succesfully\" />}\n      {/* {success && <Success success=\"Product Added Successfully\" />} */}\n      <Form onSubmit={submitForm} className=\"p-4\">\n        <Row className=\"mb-2\">\n          <Row>\n            <Form.Group as={Col} controlId=\"formGridEmail\">\n              <Form.Label>Name</Form.Label>\n              <Form.Control\n                type=\"text\"\n                value={name}\n                onChange={(e) => setname(e.target.value)}\n                placeholder=\"Enter product name\"\n              />\n            </Form.Group>\n            <Form.Group as={Col} controlId=\"formGridZip\">\n              <Form.Label>Price</Form.Label>\n              <Form.Control\n                type=\"text\"\n                value={price}\n                onChange={(e) => setprice(e.target.value)}\n                placeholder=\"Enter price\"\n              />\n            </Form.Group>\n          </Row>\n        </Row>\n        <Row >\n          <Form.Group as={Col} className=\"mb-3\" controlId=\"formGridAddress2\">\n            <Form.Label>Category</Form.Label>\n            <Form.Control\n              type=\"text\"\n              value={category}\n              onChange={(e) => setcategory(e.target.value)}\n              placeholder=\"Enter Category\"\n            />\n          </Form.Group>\n          <Form.Group as={Col} className=\"mb-3\" controlId=\"formGridAddress2\">\n            <Form.Label>Brand</Form.Label>\n            <Form.Control\n              type=\"text\"\n              value={brand}\n              onChange={(e) => setbrand(e.target.value)}\n              placeholder=\"Enter Brand\"\n            />\n          </Form.Group>\n        </Row>\n        <Row className=\"mb-2\">\n          <Form.Group as={Col} controlId=\"formGridPassword\">\n            <Form.Label>Image</Form.Label>\n            <Form.Control\n              ttype=\"text\"\n              value={image}\n              onChange={(e) => setimage(e.target.value)}\n              placeholder=\"Add Image URL\"\n            />\n          </Form.Group>\n        </Row>\n        <Row className=\"mb-2\">\n          <Form.Group className=\"mb-3\" controlId=\"formGridAddress1\">\n            <Form.Label>Description</Form.Label>\n            <Form.Control\n              type=\"text\"\n              value={description}\n              onChange={(e) => setdescription(e.target.value)}\n              placeholder=\"Enter Description\"\n            />\n          </Form.Group>\n        </Row>\n\n        <button className=\"btn\" style={{'background-color':'#22A39F', 'color':'#000000'}}>\n          Add New\n        </button>\n      </Form>\n    </div>\n  );\n};\n\nexport default AddNewProduct;\n","/Users/satvikmadaan/Desktop/Agrobuy/frontend/src/components/shared/Success.jsx",[],"/Users/satvikmadaan/Desktop/Agrobuy/frontend/src/screens/FirstScreen.jsx",[],{"ruleId":"264","replacedBy":"265"},{"ruleId":"266","replacedBy":"267"},{"ruleId":"268","severity":1,"message":"269","line":34,"column":9,"nodeType":"270","messageId":"271","endLine":34,"endColumn":30},{"ruleId":"268","severity":1,"message":"272","line":49,"column":11,"nodeType":"270","messageId":"271","endLine":49,"endColumn":14},{"ruleId":"273","severity":1,"message":"274","line":11,"column":11,"nodeType":"275","endLine":11,"endColumn":38},{"ruleId":"268","severity":1,"message":"276","line":23,"column":9,"nodeType":"270","messageId":"271","endLine":23,"endColumn":24},{"ruleId":"268","severity":1,"message":"277","line":7,"column":10,"nodeType":"270","messageId":"271","endLine":7,"endColumn":22},{"ruleId":"268","severity":1,"message":"278","line":5,"column":8,"nodeType":"270","messageId":"271","endLine":5,"endColumn":14},{"ruleId":"268","severity":1,"message":"279","line":27,"column":11,"nodeType":"270","messageId":"271","endLine":27,"endColumn":18},{"ruleId":"268","severity":1,"message":"280","line":8,"column":8,"nodeType":"270","messageId":"271","endLine":8,"endColumn":13},{"ruleId":"268","severity":1,"message":"281","line":19,"column":9,"nodeType":"270","messageId":"271","endLine":19,"endColumn":19},{"ruleId":"268","severity":1,"message":"282","line":23,"column":11,"nodeType":"270","messageId":"271","endLine":23,"endColumn":14},{"ruleId":"268","severity":1,"message":"283","line":2,"column":26,"nodeType":"270","messageId":"271","endLine":2,"endColumn":32},"no-native-reassign",["284"],"no-negated-in-lhs",["285"],"no-unused-vars","'successPaymentHandler' is assigned a value but never used.","Identifier","unusedVar","'res' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'getBreederState' is assigned a value but never used.","'AiFillDelete' is defined but never used.","'Loader' is defined but never used.","'loading' is assigned a value but never used.","'Popup' is defined but never used.","'handleShow' is assigned a value but never used.","'bid' is assigned a value but never used.","'Button' is defined but never used.","no-global-assign","no-unsafe-negation"]